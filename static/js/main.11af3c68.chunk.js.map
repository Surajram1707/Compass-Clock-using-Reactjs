{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","array","length","Array","from","map","v","k","x","addPreZero","num","state","year","M_month","month","day","week","hour","Minute","second","Zodiac","split","M_months","setInterval","time","Date","setState","getUTCFullYear","getUTCMonth","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","className","this","index","style","transform","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11af3c68.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state=({\n      year:2021,\n      M_month:'Mar',\n      month:1,\n      day:1,\n      week:1,\n      hour:12,\n      Minute:1,\n      second:1,\n      Zodiac:'Aries, Taurus, Gemini, Cancer, Leo, Virgo, Libra, Scorpio, Sagittarius, Capricorn, Aquarius, Pisces'.split(','),\n      M_months:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Spt\",\"Oct\",\"Nov\",\"Dec\"],\n    })\n  }\n\n componentWillMount(){\n   setInterval(()=>{\n     let time= new Date()\n     this.setState({\n      year:this.state.Zodiac[time.getUTCFullYear()%12],\n      M_month:this.state.M_months[time.getUTCMonth()],\n      month:time.getMonth()+1,\n      day:time.getDate(),\n      week:time.getDay(),\n      hour:time.getHours(),\n      Minute:time.getMinutes(),\n      second:time.getSeconds()\n     })\n   },1000)\n\n }\n  array = length => Array.from({length}).map((v, k) => k).map(x=>x+1);\n  addPreZero = num =>{\n    if(num>=10)return num\n    return '0'+num\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className='msg'>\n            <div  className='year'>\n            <span>\n            {this.state.year}</span> / Year\n            </div>\n          </div>\n          <div className='M_month'>\n          {`${this.state.M_month}`}\n          </div>\n          <div className='box'>\n\n           \n\n            {this.array(12).map((x,index)=>{\n              return (\n                <div key={index} className={`month item ${index===(this.state.month-1)?\"active\":\"\"}`} style={{transform: `rotate(${index*30-30*(this.state.month-1)}deg)`}}>\n                  {`${x} month`}\n                </div>\n              )\n            })}\n\n            {this.array(30).map((x,index)=>{\n              return (\n                <div key={index} className={`day item ${index===(this.state.day-1)?\"active\":\"\"}`} style={{transform: `rotate(${index*12-12*(this.state.day-1)}deg)`}}>\n                  {`${x} day`}\n                </div>\n              )\n            })}\n\n            {this.array(7).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`week item ${index===(this.state.week-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/21)-(360/21)*(this.state.week-1)}deg)`}}>\n                  {`week ${x}`}\n                </div>\n              )\n            })}\n\n            {this.array(24).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`hour item ${index===(this.state.hour-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/24)-(360/24)*(this.state.hour-1)}deg)`}}>\n                  {`${x} hr`}\n                </div>\n              )\n            })}\n\n            {this.array(60).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`Minute item ${index===(this.state.Minute-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/60)-(360/60)*(this.state.Minute-1)}deg)`}}>\n                  {`${x} min`}\n                </div>\n              )\n            })}\n\n            {this.array(60).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`second item ${index===(this.state.second-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/60)-(360/60)*(this.state.second-1)}deg)`}}>\n                  {`${x} sec`}\n                </div>\n              )\n            })}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}